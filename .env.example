# .env.example
# This file contains environment variables for the TournaTrack application.
# Copy this file to .env.local and fill in the values.

# --- Firebase Configuration ---
# Create a Firebase project at https://console.firebase.google.com/
# In your project, go to Project Settings > General tab.
# Under "Your apps", click on the web icon (</>) to create a new web app or get your existing config.

NEXT_PUBLIC_FIREBASE_API_KEY="your-api-key"
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="your-project-id.firebaseapp.com"
NEXT_PUBLIC_FIREBASE_DATABASE_URL="https://your-project-id-default-rtdb.region.firebasedatabase.app"
NEXT_PUBLIC_FIREBASE_PROJECT_ID="your-project-id"
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="your-project-id.appspot.com"
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="your-sender-id"
NEXT_PUBLIC_FIREBASE_APP_ID="your-app-id"
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID="your-measurement-id"

# Gemini API Key (Not required for now)
GEMINI_API_KEY="your-gemini-api-key"


# --- Firestore Database Setup ---
# 1. In your Firebase project console, navigate to Firestore Database.
# 2. Click "Create database" and start in "production mode".
# 3. Choose a location for your Firestore data that is close to your users.
# 4. Create initial collections for your data. We recommend:
#    - 'users': To store employee profiles (email, name, branch, etc.).
#    - 'games': To store information about each game type.
#    - 'matches': To store details of each match, including players, scores, and status.

# --- Email Magic Link (Passwordless) Authentication ---
# 1. In the Firebase console, go to Authentication > Sign-in method tab.
# 2. Click on "Add new provider" and select "Email/Password".
# 3. Enable the "Email/Password" provider.
# 4. Underneath it, enable the "Email link (passwordless sign-in)" option.
# 5. Authorize your domain:
#    - Go to Authentication > Settings > Authorized domains.
#    - Click "Add domain" and enter the domain where your app is hosted (e.g., localhost for development, your-app-name.web.app for production).
